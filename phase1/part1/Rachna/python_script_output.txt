C:\Python27\python.exe C:/Users/rachna.s/PycharmProjects/compilers/compilers.py
terminal list is:  ['let', 'in', 'end', 'epsilon', 'id', '=', 'array', 'intlit', 'of', 'is', 'int', 'float', 'var', 'optional-init', ':=', 'fundtion', '(', ')', 'begin', 'while', 'do', 'enddo', 'for', 'to', '', 'break', 'return', 'if', 'then', 'else', 'endif', 'matched-stmt', 'floatlit', '[', ']', '&', '|', '<>', '>', '<', '>=', '<=', '+', '-', '*', '\\']
non-terminal list is:  ['tiger-program', 'declaration-segment', 'stat-seq', 'type-declaration-list', 'var-declaration-list', 'funct-declaration-list', 'type-declaration', 'var-declaration', 'funct-declaration', 'type', 'type-id', 'id-list', 'const', 'param-list', 'ret-type', 'param', 'param-list-tail', 'stat', 'lvalue', 'expr', 'matched-stat', 'unmatched-stat', 'opt-prefix', 'expr-list', 'expr1', 'expr-list-tail', 'lvalue-tail', 'term1', 't_tail1', 'boolop', 'term2', 't_tail2', 'compareop', 'term3', 't_tail3', 'addsubop', 'factor', 't_tail4', 'muldivop']
First set is:  [('let', ['let']), ('in', ['in']), ('end', ['end']), ('epsilon', ['epsilon']), ('id', ['id']), ('=', ['=']), ('array', ['array']), ('intlit', ['intlit']), ('of', ['of']), ('is', ['is']), ('int', ['int']), ('float', ['float']), ('var', ['var']), ('optional-init', ['optional-init']), (':=', [':=']), ('fundtion', ['fundtion']), ('(', ['(']), (')', [')']), ('begin', ['begin']), ('while', ['while']), ('do', ['do']), ('enddo', ['enddo']), ('for', ['for']), ('to', ['to']), ('', ['']), ('break', ['break']), ('return', ['return']), ('if', ['if']), ('then', ['then']), ('else', ['else']), ('endif', ['endif']), ('matched-stmt', ['matched-stmt']), ('floatlit', ['floatlit']), ('[', ['[']), (']', [']']), ('&', ['&']), ('|', ['|']), ('<>', ['<>']), ('>', ['>']), ('<', ['<']), ('>=', ['>=']), ('<=', ['<=']), ('+', ['+']), ('-', ['-']), ('*', ['*']), ('\\', ['\\']), ('muldivop', ['*', '\\']), ('t_tail4', ['*', '\\', 'epsilon']), ('factor', ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), ('addsubop', ['+', '-']), ('t_tail3', ['+', '-', 'epsilon']), ('term3', ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), ('compareop', ['<>', '=', '>', '<', '>=', '<=']), ('t_tail2', ['<>', '=', '>', '<', '>=', '<=', 'epsilon']), ('term2', ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), ('boolop', ['&', '|']), ('t_tail1', ['&', '|', 'epsilon']), ('term1', ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), ('lvalue-tail', ['[', 'epsilon']), ('expr-list-tail', ['intlit', 'floatlit', 'id', '(', 'intlit', 'floatlit', 'id', 'int', 'float', 'array', 'is', 'intlit', 'floatlit', '(', 'epsilon']), ('expr1', ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), ('expr-list', ['epsilon', 'intlit', 'floatlit', 'id', '(', 'intlit', 'floatlit', 'id', 'int', 'float', 'array', 'is', 'intlit', 'floatlit', '(']), ('opt-prefix', ['id', 'epsilon']), ('unmatched-stat', ['if', 'if']), ('matched-stat', ['if']), ('expr', ['intlit', 'floatlit', 'id', '(', 'intlit', 'floatlit', 'id', 'int', 'float', 'array', 'is', 'intlit', 'floatlit', '(']), ('lvalue', ['id']), ('stat', ['id', 'if', 'if', 'if', 'while', 'for', 'id', 'id', 'break', 'return', 'let']), ('param-list-tail', ['epsilon', 'id']), ('param', ['id']), ('ret-type', ['epsilon', 'int', 'float', 'array', 'is']), ('param-list', ['id']), ('const', ['intlit', 'floatlit']), ('id-list', ['id', 'id']), ('type-id', ['int', 'float']), ('type', ['int', 'float', 'array', 'is']), ('funct-declaration', ['fundtion']), ('var-declaration', ['var']), ('type-declaration', ['int', 'float', 'array', 'is']), ('funct-declaration-list', ['epsilon', 'fundtion']), ('var-declaration-list', ['epsilon', 'var']), ('type-declaration-list', ['epsilon', 'int', 'float', 'array', 'is']), ('stat-seq', ['id', 'if', 'if', 'if', 'while', 'for', 'id', 'id', 'break', 'return', 'let', 'id', 'if', 'if', 'if', 'while', 'for', 'id', 'id', 'break', 'return', 'let']), ('declaration-segment', ['epsilon', 'int', 'float', 'array', 'is']), ('tiger-program', ['let'])]
Follow set is:  [('tiger-program', ['$']), ('declaration-segment', ['in']), ('stat-seq', ['end', 'enddo', 'endif']), ('type-declaration-list', ['var', 'fundtion', 'in']), ('var-declaration-list', ['fundtion', 'in']), ('funct-declaration-list', ['in']), ('type-declaration', ['int', 'float', 'array', 'is', 'var', 'fundtion', 'in']), ('var-declaration', ['var', 'fundtion', 'in']), ('funct-declaration', ['fundtion', 'in']), ('type', ['id', 'optional-init']), ('type-id', ['id', 'optional-init']), ('id-list', ['int', 'float', 'array', 'is']), ('const', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('param-list', [')']), ('ret-type', ['begin']), ('param', ['id', ')']), ('param-list-tail', [')']), ('stat', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']), ('lvalue', [':=']), ('expr', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('matched-stat', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'else']), ('unmatched-stat', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']), ('opt-prefix', ['id']), ('expr-list', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']), ('expr1', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('expr-list-tail', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']), ('lvalue-tail', [':=']), ('term1', ['&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('t_tail1', ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('boolop', ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), ('term2', ['<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('t_tail2', ['&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('compareop', ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), ('term3', ['+', '-', '<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('t_tail3', ['<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('addsubop', ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), ('factor', ['*', '\\', '+', '-', '<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('t_tail4', ['+', '-', '<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), ('muldivop', ['int', 'float', 'array', 'is', 'intlit', 'floatlit'])]
######################################################33
Predicted set is :
[(['tiger-program', 'let', 'declaration-segment', 'in', 'stat-seq', 'end'], ['let']), (['declaration-segment', 'type-declaration-list', 'var-declaration-list', 'funct-declaration-list'], ['int', 'float', 'array', 'is', 'in']), (['type-declaration-list', 'epsilon'], ['var', 'fundtion', 'in']), (['type-declaration-list', 'type-declaration', 'type-declaration-list'], ['int', 'float', 'array', 'is']), (['var-declaration-list', 'epsilon'], ['fundtion', 'in']), (['var-declaration-list', 'var-declaration', 'var-declaration-list'], ['var']), (['funct-declaration-list', 'epsilon'], ['in']), (['funct-declaration-list', 'funct-declaration', 'funct-declaration-list'], ['fundtion']), (['type-declaration', 'type', 'id', '=', 'type'], ['int', 'float', 'array', 'is']), (['type', 'type-id'], ['int', 'float']), (['type', 'array', 'intlit', 'of', 'type-id'], ['array']), (['type', 'is'], ['is']), (['type-id', 'int'], ['int']), (['type-id', 'float'], ['float']), (['var-declaration', 'var', 'id-list', 'type', 'optional-init'], ['var']), (['id-list', 'id'], ['id']), (['id-list', 'id', 'id-list'], ['id']), (['optinal-init', 'epsilon'], []), (['optinal-init', ':=', 'const'], [':=']), (['funct-declaration', 'fundtion', 'id', '(', 'param-list', ')', 'ret-type', 'begin', 'stat-seq', 'end'], ['fundtion']), (['param-list', 'param', 'param-list-tail'], ['id']), (['param-list-tail', 'epsilon'], [')']), (['param-list-tail', 'param', 'param-list-tail'], ['id']), (['ret-type', 'epsilon'], ['begin']), (['ret-type', 'type'], ['int', 'float', 'array', 'is']), (['param', 'id', 'type'], ['id']), (['stat-seq', 'stat'], ['id', 'if', 'if', 'if', 'while', 'for', 'id', 'id', 'break', 'return', 'let']), (['stat-seq', 'stat', 'stat-seq'], ['id', 'if', 'if', 'if', 'while', 'for', 'id', 'id', 'break', 'return', 'let']), (['stat', 'lvalue', ':=', 'expr'], ['id']), (['stat', 'matched-stat'], ['if']), (['stat', 'unmatched-stat'], ['if', 'if']), (['stat', 'while', 'expr', 'do', 'stat-seq', 'enddo'], ['while']), (['stat', 'for', 'id', ':=', 'expr', 'to', 'expr', 'do', 'stat-seq', 'enddo'], ['for']), (['stat', 'opt-prefix', 'id', '', '(', 'expr-list'], ['id', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']), (['stat', 'break'], ['break']), (['stat', 'return', 'expr'], ['return']), (['stat', 'let', 'declaration-segment', 'in', 'stat-seq', 'end'], ['let']), (['matched-stat', 'if', 'expr', 'then', 'matched-stat', 'else', 'matched-stat', 'endif'], ['if']), (['unmatched-stat', 'if', 'expr', 'then', 'stat-seq', 'endif'], ['if']), (['unmatched-stat', 'if', 'expr', 'then', 'matched-stmt', 'else', 'unmatched-stat', 'endif'], ['if']), (['opt-prefix', 'lvalue', ':='], ['id']), (['opt-prefix', 'epsilon'], ['id']), (['expr', 'const'], ['intlit', 'floatlit']), (['expr', 'lvalue'], ['id']), (['expr', '(', 'expr', ')'], ['(']), (['expr', 'const'], ['intlit', 'floatlit']), (['expr', 'lvalue'], ['id']), (['expr', 'expr1'], ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), (['expr', '(', 'expr1', ')'], ['(']), (['const', 'intlit'], ['intlit']), (['const', 'floatlit'], ['floatlit']), (['expr-list', 'epsilon'], ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']), (['expr-list', 'expr', 'expr-list-tail'], ['intlit', 'floatlit', 'id', '(', 'intlit', 'floatlit', 'id', 'int', 'float', 'array', 'is', 'intlit', 'floatlit', '(']), (['expr-list-tail', 'expr', 'expr-list-tail'], ['intlit', 'floatlit', 'id', '(', 'intlit', 'floatlit', 'id', 'int', 'float', 'array', 'is', 'intlit', 'floatlit', '(']), (['expr-list-tail', 'epsilon'], ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']), (['lvalue', 'id', 'lvalue-tail'], ['id']), (['lvalue-tail', '[', 'expr', ']'], ['[']), (['lvalue-tail', 'epsilon'], [':=']), (['expr1', 'term1', 't_tail1'], ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), (['t_tail1', 'boolop', 'term1', 't_tail1'], ['&', '|']), (['t_tail1', 'epsilon'], ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), (['term1', 'term2', 't_tail2'], ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), (['t_tail2', 'compareop', 'term2', 't_tail2'], ['<>', '=', '>', '<', '>=', '<=']), (['t_tail2', 'epsilon'], ['&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), (['term2', 'term3', 't_tail3'], ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), (['t_tail3', 'addsubop', 'term3', 't_tail3'], ['+', '-']), (['t_tail3', 'epsilon'], ['<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), (['term3', 'factor', 't_tail4'], ['int', 'float', 'array', 'is', 'intlit', 'floatlit']), (['t_tail4', 'muldivop', 'factor', 't_tail4'], ['*', '\\']), (['t_tail4', 'epsilon'], ['+', '-', '<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']), (['boolop', '&'], ['&']), (['boolop', '|'], ['|']), (['compareop', '<>'], ['<>']), (['compareop', '='], ['=']), (['compareop', '>'], ['>']), (['compareop', '<'], ['<']), (['compareop', '>='], ['>=']), (['compareop', '<='], ['<=']), (['addsubop', '+'], ['+']), (['addsubop', '-'], ['-']), (['muldivop', '*'], ['*']), (['muldivop', '\\'], ['\\']), (['factor', 'type'], ['int', 'float', 'array', 'is']), (['factor', 'const'], ['intlit', 'floatlit'])]
############################################
terminal list =  ['let', 'in', 'end', 'epsilon', 'id', '=', 'array', 'intlit', 'of', 'is', 'int', 'float', 'var', 'optional-init', ':=', 'fundtion', '(', ')', 'begin', 'while', 'do', 'enddo', 'for', 'to', '', 'break', 'return', 'if', 'then', 'else', 'endif', 'matched-stmt', 'floatlit', '[', ']', '&', '|', '<>', '>', '<', '>=', '<=', '+', '-', '*', '\\']
modified terminal list is  ['let', 'in', 'end', 'id', '=', 'array', 'intlit', 'of', 'is', 'int', 'float', 'var', 'optional-init', ':=', 'fundtion', '(', ')', 'begin', 'while', 'do', 'enddo', 'for', 'to', '', 'break', 'return', 'if', 'then', 'else', 'endif', 'matched-stmt', 'floatlit', '[', ']', '&', '|', '<>', '>', '<', '>=', '<=', '+', '-', '*', '\\', '$']
non-terminal list =  ['tiger-program', 'declaration-segment', 'stat-seq', 'type-declaration-list', 'var-declaration-list', 'funct-declaration-list', 'type-declaration', 'var-declaration', 'funct-declaration', 'type', 'type-id', 'id-list', 'const', 'param-list', 'ret-type', 'param', 'param-list-tail', 'stat', 'lvalue', 'expr', 'matched-stat', 'unmatched-stat', 'opt-prefix', 'expr-list', 'expr1', 'expr-list-tail', 'lvalue-tail', 'term1', 't_tail1', 'boolop', 'term2', 't_tail2', 'compareop', 'term3', 't_tail3', 'addsubop', 'factor', 't_tail4', 'muldivop']
Rule list is: 
0 ['tiger-program', 'let', 'declaration-segment', 'in', 'stat-seq', 'end'] ['let']
1 ['declaration-segment', 'type-declaration-list', 'var-declaration-list', 'funct-declaration-list'] ['int', 'float', 'array', 'is', 'in']
2 ['type-declaration-list', 'epsilon'] ['var', 'fundtion', 'in']
3 ['type-declaration-list', 'type-declaration', 'type-declaration-list'] ['int', 'float', 'array', 'is']
4 ['var-declaration-list', 'epsilon'] ['fundtion', 'in']
5 ['var-declaration-list', 'var-declaration', 'var-declaration-list'] ['var']
6 ['funct-declaration-list', 'epsilon'] ['in']
7 ['funct-declaration-list', 'funct-declaration', 'funct-declaration-list'] ['fundtion']
8 ['type-declaration', 'type', 'id', '=', 'type'] ['int', 'float', 'array', 'is']
9 ['type', 'type-id'] ['int', 'float']
10 ['type', 'array', 'intlit', 'of', 'type-id'] ['array']
11 ['type', 'is'] ['is']
12 ['type-id', 'int'] ['int']
13 ['type-id', 'float'] ['float']
14 ['var-declaration', 'var', 'id-list', 'type', 'optional-init'] ['var']
15 ['id-list', 'id'] ['id']
16 ['id-list', 'id', 'id-list'] ['id']
17 ['optinal-init', 'epsilon'] []
18 ['optinal-init', ':=', 'const'] [':=']
19 ['funct-declaration', 'fundtion', 'id', '(', 'param-list', ')', 'ret-type', 'begin', 'stat-seq', 'end'] ['fundtion']
20 ['param-list', 'param', 'param-list-tail'] ['id']
21 ['param-list-tail', 'epsilon'] [')']
22 ['param-list-tail', 'param', 'param-list-tail'] ['id']
23 ['ret-type', 'epsilon'] ['begin']
24 ['ret-type', 'type'] ['int', 'float', 'array', 'is']
25 ['param', 'id', 'type'] ['id']
26 ['stat-seq', 'stat'] ['id', 'if', 'if', 'if', 'while', 'for', 'id', 'id', 'break', 'return', 'let']
27 ['stat-seq', 'stat', 'stat-seq'] ['id', 'if', 'if', 'if', 'while', 'for', 'id', 'id', 'break', 'return', 'let']
28 ['stat', 'lvalue', ':=', 'expr'] ['id']
29 ['stat', 'matched-stat'] ['if']
30 ['stat', 'unmatched-stat'] ['if', 'if']
31 ['stat', 'while', 'expr', 'do', 'stat-seq', 'enddo'] ['while']
32 ['stat', 'for', 'id', ':=', 'expr', 'to', 'expr', 'do', 'stat-seq', 'enddo'] ['for']
33 ['stat', 'opt-prefix', 'id', '', '(', 'expr-list'] ['id', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']
34 ['stat', 'break'] ['break']
35 ['stat', 'return', 'expr'] ['return']
36 ['stat', 'let', 'declaration-segment', 'in', 'stat-seq', 'end'] ['let']
37 ['matched-stat', 'if', 'expr', 'then', 'matched-stat', 'else', 'matched-stat', 'endif'] ['if']
38 ['unmatched-stat', 'if', 'expr', 'then', 'stat-seq', 'endif'] ['if']
39 ['unmatched-stat', 'if', 'expr', 'then', 'matched-stmt', 'else', 'unmatched-stat', 'endif'] ['if']
40 ['opt-prefix', 'lvalue', ':='] ['id']
41 ['opt-prefix', 'epsilon'] ['id']
42 ['expr', 'const'] ['intlit', 'floatlit']
43 ['expr', 'lvalue'] ['id']
44 ['expr', '(', 'expr', ')'] ['(']
45 ['expr', 'const'] ['intlit', 'floatlit']
46 ['expr', 'lvalue'] ['id']
47 ['expr', 'expr1'] ['int', 'float', 'array', 'is', 'intlit', 'floatlit']
48 ['expr', '(', 'expr1', ')'] ['(']
49 ['const', 'intlit'] ['intlit']
50 ['const', 'floatlit'] ['floatlit']
51 ['expr-list', 'epsilon'] ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']
52 ['expr-list', 'expr', 'expr-list-tail'] ['intlit', 'floatlit', 'id', '(', 'intlit', 'floatlit', 'id', 'int', 'float', 'array', 'is', 'intlit', 'floatlit', '(']
53 ['expr-list-tail', 'expr', 'expr-list-tail'] ['intlit', 'floatlit', 'id', '(', 'intlit', 'floatlit', 'id', 'int', 'float', 'array', 'is', 'intlit', 'floatlit', '(']
54 ['expr-list-tail', 'epsilon'] ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let']
55 ['lvalue', 'id', 'lvalue-tail'] ['id']
56 ['lvalue-tail', '[', 'expr', ']'] ['[']
57 ['lvalue-tail', 'epsilon'] [':=']
58 ['expr1', 'term1', 't_tail1'] ['int', 'float', 'array', 'is', 'intlit', 'floatlit']
59 ['t_tail1', 'boolop', 'term1', 't_tail1'] ['&', '|']
60 ['t_tail1', 'epsilon'] ['end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']
61 ['term1', 'term2', 't_tail2'] ['int', 'float', 'array', 'is', 'intlit', 'floatlit']
62 ['t_tail2', 'compareop', 'term2', 't_tail2'] ['<>', '=', '>', '<', '>=', '<=']
63 ['t_tail2', 'epsilon'] ['&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']
64 ['term2', 'term3', 't_tail3'] ['int', 'float', 'array', 'is', 'intlit', 'floatlit']
65 ['t_tail3', 'addsubop', 'term3', 't_tail3'] ['+', '-']
66 ['t_tail3', 'epsilon'] ['<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']
67 ['term3', 'factor', 't_tail4'] ['int', 'float', 'array', 'is', 'intlit', 'floatlit']
68 ['t_tail4', 'muldivop', 'factor', 't_tail4'] ['*', '\\']
69 ['t_tail4', 'epsilon'] ['+', '-', '<>', '=', '>', '<', '>=', '<=', '&', '|', 'end', 'enddo', 'endif', 'id', 'if', 'while', 'for', 'break', 'return', 'let', 'do', 'to', 'then', ')', 'intlit', 'floatlit', '(', 'int', 'float', 'array', 'is', ']']
70 ['boolop', '&'] ['&']
71 ['boolop', '|'] ['|']
72 ['compareop', '<>'] ['<>']
73 ['compareop', '='] ['=']
74 ['compareop', '>'] ['>']
75 ['compareop', '<'] ['<']
76 ['compareop', '>='] ['>=']
77 ['compareop', '<='] ['<=']
78 ['addsubop', '+'] ['+']
79 ['addsubop', '-'] ['-']
80 ['muldivop', '*'] ['*']
81 ['muldivop', '\\'] ['\\']
82 ['factor', 'type'] ['int', 'float', 'array', 'is']
83 ['factor', 'const'] ['intlit', 'floatlit']
Final parser table: rows->non-terminal, col->modified terminals. index starts with 0. Integer represents rule index in rule list
     0.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     1.0     nan     nan     nan     1.0     nan     nan     1.0     1.0     1.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
    27.0     nan     nan    27.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    27.0     nan     nan    27.0     nan     nan    27.0    27.0    27.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     2.0     nan     nan     nan     3.0     nan     nan     3.0     3.0     3.0     2.0     nan     nan     2.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     4.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     5.0     nan     nan     4.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     6.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     7.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     8.0     nan     nan     8.0     8.0     8.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    14.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    19.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan    10.0     nan     nan    11.0     9.0     9.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan    12.0    13.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan    16.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     nan    49.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    50.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan    20.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan    24.0     nan     nan    24.0    24.0    24.0     nan     nan     nan     nan     nan     nan    23.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan    25.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan    22.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    21.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
    36.0     nan    33.0    33.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    33.0     nan    33.0    33.0     nan     nan    34.0    35.0    33.0     nan     nan    33.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan    55.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan    46.0     nan    47.0    47.0     nan    47.0    47.0    47.0     nan     nan     nan     nan    48.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    47.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    37.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    39.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan    41.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
    51.0     nan    51.0    52.0     nan    52.0    52.0     nan    52.0    52.0    52.0     nan     nan     nan     nan    52.0     nan     nan    51.0     nan    51.0    51.0     nan     nan    51.0    51.0    51.0     nan     nan    51.0     nan    52.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan    58.0    58.0     nan    58.0    58.0    58.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    58.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
    54.0     nan    54.0    54.0     nan    53.0    53.0     nan    53.0    53.0    53.0     nan     nan     nan     nan    53.0     nan     nan    54.0     nan    54.0    54.0     nan     nan    54.0    54.0    54.0     nan     nan    54.0     nan    53.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    57.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    56.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan    61.0    61.0     nan    61.0    61.0    61.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    61.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
    60.0     nan    60.0    60.0     nan    60.0    60.0     nan    60.0    60.0    60.0     nan     nan     nan     nan    60.0    60.0     nan    60.0    60.0    60.0    60.0    60.0     nan    60.0    60.0    60.0    60.0     nan    60.0     nan    60.0     nan    60.0    59.0    59.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    70.0    71.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan    64.0    64.0     nan    64.0    64.0    64.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    64.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
    63.0     nan    63.0    63.0    62.0    63.0    63.0     nan    63.0    63.0    63.0     nan     nan     nan     nan    63.0    63.0     nan    63.0    63.0    63.0    63.0    63.0     nan    63.0    63.0    63.0    63.0     nan    63.0     nan    63.0     nan    63.0    63.0    63.0    62.0    62.0    62.0    62.0    62.0     nan     nan     nan     nan     nan
     nan     nan     nan     nan    73.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    72.0    74.0    75.0    76.0    77.0     nan     nan     nan     nan     nan
     nan     nan     nan     nan     nan    67.0    67.0     nan    67.0    67.0    67.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    67.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
    66.0     nan    66.0    66.0    66.0    66.0    66.0     nan    66.0    66.0    66.0     nan     nan     nan     nan    66.0    66.0     nan    66.0    66.0    66.0    66.0    66.0     nan    66.0    66.0    66.0    66.0     nan    66.0     nan    66.0     nan    66.0    66.0    66.0    66.0    66.0    66.0    66.0    66.0    65.0    65.0     nan     nan     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    78.0    79.0     nan     nan     nan
     nan     nan     nan     nan     nan    82.0    83.0     nan    82.0    82.0    82.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    83.0     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan
    69.0     nan    69.0    69.0    69.0    69.0    69.0     nan    69.0    69.0    69.0     nan     nan     nan     nan    69.0    69.0     nan    69.0    69.0    69.0    69.0    69.0     nan    69.0    69.0    69.0    69.0     nan    69.0     nan    69.0     nan    69.0    69.0    69.0    69.0    69.0    69.0    69.0    69.0    69.0    69.0    68.0    68.0     nan
     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan     nan    80.0    81.0     nan

Process finished with exit code 0
